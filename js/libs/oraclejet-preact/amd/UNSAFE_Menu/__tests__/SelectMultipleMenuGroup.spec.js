define(["preact/jsx-runtime","preact/hooks","@testing-library/preact","chai","sinon","../../UNSAFE_Button","../../Menu-34c29ef1","../../SelectMenuItem-127bc6db","../../UNSAFE_Environment","../../menuTestsUtils-83c9272c","../../Button-6236e6b9","../../UNSAFE_BaseButton","../../BaseButton-6b15cf96","../../tslib.es6-24bf3861","../../hooks/UNSAFE_usePress","../../hooks/UNSAFE_useHover","../../hooks/UNSAFE_useToggle","../../hooks/UNSAFE_useActive","../../utils/UNSAFE_classNames","../../classNames-f11010a7","preact/compat","css!./../../UNSAFE_Menu.css","../../utils/UNSAFE_interpolations/dimensions","../../utils/UNSAFE_arrayUtils","../../utils/UNSAFE_size","../../_curry1-f9717f1c","../../utils/UNSAFE_mergeInterpolations","../../_curry3-01167a7d","../../_curry2-c4648b65","../../_has-6f4fa2af","../../utils/PRIVATE_clientHints","../../clientHints-33be1380","../../hooks/UNSAFE_useTabbableMode","preact","../../utils/UNSAFE_mergeProps","../../UNSAFE_Layer","../../UNSAFE_Floating","../../Floating-1e70bca1","../../index-66b69d43","../../hooks/UNSAFE_useUser","../../utils/PRIVATE_floatingUtils","../../utils/PRIVATE_refUtils","../../hooks/UNSAFE_useOutsideClick","../../hooks/PRIVATE_useCollectionFocusRing","../../MenuItem-792282d6","../../UNSAFE_Text","../../Text-6ee93c22","../../hooks/UNSAFE_useId","../../useModal-b9882031","../../index-c7f647a1","../../index-72f6069b","../../UNSAFE_Icon","../../Icon-7291b5d0","../../hooks/UNSAFE_useTooltip","../../hooks/UNSAFE_useFocus","../../hooks/UNSAFE_useTouch","../../hooks/UNSAFE_useAnimation","../../useAnimation-19a01c68","../../hooks/UNSAFE_useTheme"],function(e,t,n,l,c,s,i,u,o,a,r,x,g,p,m,d,h,A,b,f,k,E,S,I,_,v,U,F,N,M,y,j,B,R,T,q,C,P,V,O,G,w,H,z,L,W,D,J,K,Q,X,Y,Z,$,ee,te,ne,le,ce){"use strict";function se({value:t,onCommit:n,children:l}){return e.jsx(u.SelectMenuGroupContext.Provider,Object.assign({value:{isMultiple:!0,value:t,onCommit:n}},{children:l}))}const ie=({initialValue:n,onCommit:l})=>{const[c,s]=t.useState(n),a=t.useRef(null);return e.jsx(e.Fragment,{children:e.jsxs(o.RootEnvironmentProvider,{children:[e.jsx(r.Button,{ref:a,label:"Text Wrapping"}),e.jsx(i.Menu,Object.assign({isOpen:!0,anchorRef:a},{children:e.jsxs(se,Object.assign({value:c,onCommit:l||(({value:e})=>{s(e)})},{children:[e.jsx(u.SelectMenuItem,{value:"bold",label:"Bold"}),e.jsx(u.SelectMenuItem,{value:"italics",label:"Italics"}),e.jsx(u.SelectMenuItem,{value:"underline",label:"Undeline"})]}))}))]})})};describe("Test Menu Component",()=>{beforeEach(()=>{a.setObserverConfig()}),it("onCommit called when selecting item",async function(){const t=c.spy(),s=n.render(e.jsx(ie,{onCommit:t})),i=a.getAllMenuItemsByRole(s,"menuitemcheckbox");n.fireEvent.click(i[0]),l.expect(t.calledOnce).to.be.true}),it("Initial SelectMultipleMenuGroup render without value",async function(){const t=n.render(e.jsx(ie,{})),c=a.getAllMenuItemsByRole(t,"menuitemcheckbox"),s=c[0],i=c[1],u=c[2];l.expect(s).not.null,l.expect(s.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(s,"svg")).null,l.expect(i).not.null,l.expect(i.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(i,"svg")).null,l.expect(u).not.null,l.expect(u.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(u,"svg")).null}),it("Initial SelectMultipleMenuGroup render with value",async function(){const t=n.render(e.jsx(ie,{initialValue:["bold"]})),c=a.getAllMenuItemsByRole(t,"menuitemcheckbox"),s=c[0],i=c[1],u=c[2];l.expect(s).not.null,l.expect(s.getAttribute("aria-checked")).equals("true"),l.expect(a.getIcon(s,"svg")).not.null,l.expect(i).not.null,l.expect(i.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(i,"svg")).null,l.expect(u).not.null,l.expect(u.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(u,"svg")).null}),it("SelectMultipleMenuGroup changes if selected item is selected again",async function(){const t=n.render(e.jsx(ie,{initialValue:["bold"]})),c=a.getAllMenuItemsByRole(t,"menuitemcheckbox");n.fireEvent.click(c[0]);const s=a.getAllMenuItemsByRole(t,"menuitemcheckbox"),i=s[0],u=s[1],o=s[2];l.expect(i).not.null,l.expect(i.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(i,"svg")).null,l.expect(u).not.null,l.expect(u.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(u,"svg")).null,l.expect(o).not.null,l.expect(o.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(o,"svg")).null}),it("SelectMultipleMenuGroup selected item changes when selecting it",async function(){const t=n.render(e.jsx(ie,{initialValue:["bold"]})),c=a.getAllMenuItemsByRole(t,"menuitemcheckbox");n.fireEvent.click(c[1]);const s=a.getAllMenuItemsByRole(t,"menuitemcheckbox"),i=s[0],u=s[1],o=s[2];l.expect(i).not.null,l.expect(i.getAttribute("aria-checked")).equals("true"),l.expect(a.getIcon(i,"svg")).not.null,l.expect(u).not.null,l.expect(u.getAttribute("aria-checked")).equals("true"),l.expect(a.getIcon(u,"svg")).not.null,l.expect(o).not.null,l.expect(o.getAttribute("aria-checked")).equals("false"),l.expect(a.getIcon(o,"svg")).null})})});
//# sourceMappingURL=SelectMultipleMenuGroup.spec.js.map
